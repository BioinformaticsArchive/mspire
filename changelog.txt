
## version 0.1.7

1. A couple of scripts and subroutines were hashing peptides but not on the file
basename.  This would result in slightly incorrect results (any time there
were overlapping scan numbers in multiple datasets, only the top one would be
chosen).  The results would be correct for single runs.

Output files that could be affected:
*.top_per_scan.txt
*.all_peps_per_scan.txt

Scripts that could be affected:
script/top_hit_per_scan.rb
bin/filter_spec_id.rb
script/filter-peps.rb
bin/id_precision.rb

Subroutines that were affected:
spec_id.rb (pep_probs_by_* )
spec_id.rb (top_peps_prefilter!)
proph.rb uniq_by_seqcharge
align.rb called uniq_by_seqcharge


2. false_positive_rate.rb and protein_summary.rb (by extension) were using
number of true positives on the x axis while in reality I was plotting the
number of hits.  I've updated x axis labels to reflect this change.  In
addition, since the term 'false positive rate' has such a distinct definition
in classical ROC plots and binary statistics, I've decided to work primarily
in terms of precision (TP/(TP+FP)).  I've purged the terms 'False Positive
Rate' and 'FPR' from the package. It's been suggested that FP/(TP+FP) be
called the False Positive Predictive Rate (FPPR).  I will probably implement
this in a future release.

## version 0.2.0

Revamped the way SpecID works (it is now mixed-in).
Added support for modifications to bioworks_to_pepxml.rb
Can read .srf files (nearly interchangeable with bioworks files)
Redid filter.rb

## version 0.2.1

minor bugfix

## version 0.2.2

made compatible with Bioworks fasta file reverser and updated tutorial.
Killed classify_by_prefix routine in favor of classify_by_false_flag which has
a prefix option

## version 0.2.3

in protein_summary.rb added handling for proteins with no annotation. (either
dispaly NA or use gi2annnot to grab them from NCBI)

## version 0.2.5

renamed prep_list in roc (potential breaks in code)

## version 0.2.6

1. Massive refactorization of filtering and validation.  Validation objects are
created and then can be used to validate just about anything.
2. Massive redo of the parsing of MS runs.  Can parse mzXML v1, v2.X
(including readw broken output), and mzData (even Thermo's broken output).
4. Moved all tests to specs (rspec).
5. Can read gradient programs off of .meth or .RAW files (both Xcal 1.X and
2.X)

Bugfixes:
1. The search_summary 'base_name' in pepxml output was incorrect (this did not
appear to influence our analyses, however). Fixed.
2. Enzymes with no exceptions (e.g., cuts at KR) would report one too many
missed cleavages if the last amino acid was a cut point. Fixed.

## version 0.2.7

1. In conversion from bioworks to pepxml, the default was trypsin (KR/P).
Now, the sample enzyme is set explicitly from the params file and the option
is not available.  This can give more accuract pepxml files than from
previous depending on your enzyme.

## version 0.2.9

1. Added support for phobius transmembrane predictions
2. have filter_and_validate.rb working well (multiple validators allowed).
3. Can read bioworks 3.3.1 .srf files (.srf version 3.5 files)
4. Added a bias validator

## version 0.2.10

1. Fixed --hits_separate flag in spec_id/filter

## version 0.2.11

1. Added prob precision support and reorganized filter_and_validate libs

## version 0.2.12

1. Fixed bug in transmem for prob and others.
2. Can use axml (XMLParser based) or libxml depending on availability

## version 0.2.13

1. Fixed issue with --hits_separate
2. filter_and_validate.rb requires decoy validator if decoy proteins
(refactored code)

## version 0.2.14

1. Can read PeptideProphet files (should be able to read pepxml files, too)
2. API change: Some slight modifications to the Sequest::PepXML object
interfaces and implementations (using ArrayClass)

## version 0.2.15

1. can convert srf files to sqt files

## version 0.3.0

1. IMPORTANT BUG FIX: protein reporting in srf files is correct now (proteins after the first protein were being assigned to the last hit in an out file).
2. SQT export is correct and works at least on 3.2 and 3.3.1.

## version 0.3.1

1. Bug fix in srf filtering (num_hits adjusted)

## version 0.3.2

1. Uses sequest peptide_mass_tolerance filter on srf group files by default
now.

## version 0.3.3

1. Worked out minor kinks in prob_precision.rb

## version 0.3.4

1. filters >= +3 charged ions now.

## version 0.3.5

1. fixed creation of background distribution in validators (hash_by base_name,
first_scan, charge now)

## version 0.3.6

1. split off bad_aa_est from bad_aa

## version 0.3.7

1. can deal with No_Enzyme searches now (while still capable of setting
sample_enzyme)

## version 0.3.8

1. can set a decoy to target ratio for decoy validation
2. added mass calculator in Mass::Calculator

## version 0.3.9

1. doesn't clobber mzdata filename in ms_to_lmat.rb conversion

## version 0.3.10

1. added run_percolator.rb script which makes running multiple files easy

## version 0.3.11

1. faster sensing of bad scan tags in mzXML v. 2.0 files
2. implemented lazy evaluation of spectrum in 2 different ways allowing much
larger files to be parsed

## version 0.4.0

1. ** INTERFACE CHANGE: each scan can only have one precursor (used to be an array)
2. ** INTERFACE CHANGE: spectrum mz and intensity data accessed with mzs and intensities
3. lazy eval working on mzData
4. mzData not necessarily guaranteed to have precursor intensities on lazy
eval methos (however, the method intensity_at_mz will still work (causing
evaluation))

## version 0.4.1

1. added support for reading mzXML version 3.0 (may fail in some cases)

## version 0.4.2

1. added MS::MSRun.open method
2. added method to write dta files from SRF

## version 0.4.3

1. added to_mfg_file from SRF
2. added to_dta_files from SRF complete with streaming .tar.gz output (and
supporting .zip output but it has to make tmp files)

## version 0.4.4
1. implemented q-value and pi_0 methods of Storey
2. can do complete q-value calculations given p-values
3. can determine a pi_0 given a list of target and decoy values (as booleans)
4. can determine a pi_0 given a list containing numbers of decoy and target
values as is often encountered with filtering
5. prob_validate.rb implements a q-value option for turning PeptideProphet
probabilities into q-values
6. filter_validate.rb implements a p value method using xcorr values, however,
this is not very effective since xcorr values underrepresent the the
difference between good hits and bad hits

## version 0.4.5
1. using pi_zero instead of decoy_to_target_ratio.  While all tests are
passing, this release should be considered experimental with the use of any
target-decoy validation.

## version 0.4.6
1. added NOTE to --to_qvalues option to include all results (no low prob
filter)

