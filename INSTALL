
Prerequisites
-------------

Much of the package will work without any prerequisites at all.  Some functionality may require addition ruby packages or other converters.

* libjtp - generic library installed automatically if you install mspire with rubygems (or 'gem install libjtp')

### XML parsing:

* [xmlparser](http://www.yoshidam.net/Ruby.html) (comes with one-click Windows; on Ubuntu: 'sudo apt-get libxml-parser-ruby1.8')
* [axml](http://axml.rubyforge.org/) dom wrapper for xmlparser. ('gem install axml')

### Optional:
* ['t2x'](archive/t2x) linux executable to convert .RAW files (Xcalibur 1.x) to version 1 mzXML files
* [libxml](http://libxml.rubyforge.org/) can use instead of xmlparser.  In Ubuntu: sudo apt-get install libxml2 libxml2-dev ; sudo gem install libxml-ruby --remote
* [gnuplot](http://rgplot.rubyforge.org/) ('gem install gnuplot').  For some plotting.  Of course, you'll need [gnuplot](http://www.gnuplot.info/) before this package will work.  Under one-click installer for windows this package requires a little configuration.  It works with no configuration on cygwin (or linux).

Installation
------------

    gem install mspire -v 0.4.7  # stable release
    gem install mspire   # current 0.5.x series (currently missing functionality)

See [installation under cygwin](cygwin.html) if you're on Windows.

Development
-----------

NOTE: If you are interested in becoming a developer on this project (i.e., write access to the repository) please [contact me](http://rubyforge.org/users/jtprince/)


anonymous svn checkout:

    svn checkout svn://rubyforge.org/var/svn/mspire

prerequisites: 

* [rake](http://rake.rubyforge.org/) (with rubygems: 'gem install rake --remote')
* [rspec](http://rspec.info/) (with rubygems: 'gem install rspec --remote')

Use rake:

    % rake -T
    rake clean              # Remove any temporary products.
    rake html_docs          # creates docs in doc/html
    rake package            # Build all the packages
    rake test               # Run tests
    rake test_ind           # Run unit tests individual on each test
    rake upload_docs        # create and upload docs to server
    ...etc...

    run tests: rake spec
         (or): rake specl

    run tests with large files: rake spec SPEC_LARGE=t

    run test on one file: rake spec SPEC=specs/{path_to_spec_file}

